# Generated by Django 4.1.3 on 2024-01-12 10:51

import ckeditor.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="AboutUs",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("Content", ckeditor.fields.RichTextField()),
                (
                    "FeaturedImage",
                    models.ImageField(null=True, upload_to="media/AboutUs"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="BookTheDemo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("FirstName", models.CharField(default=None, max_length=100)),
                ("LastName", models.CharField(default=None, max_length=100)),
                ("Email", models.EmailField(max_length=254)),
                ("MobileNumber", models.CharField(default=None, max_length=20)),
                ("Address", models.CharField(default=None, max_length=500)),
                (
                    "SelectLicenseType",
                    models.CharField(
                        choices=[
                            ("None", "None"),
                            ("Adult-Use Cultivation", "Adult-Use Cultivation"),
                            ("Adult-Use Mfg.", "Adult-Use Mfg."),
                            ("Adult-Use Nonstorefront", "Adult-Use Nonstorefront"),
                            ("Adult-Use Retail", "Adult-Use Retail"),
                            ("Distributor", "Distributor"),
                            ("Event", "Event"),
                            ("Medical Cultivation", "Medical Cultivation"),
                            ("Medical Mfg.", "Medical Mfg."),
                            ("Medical Nonstorefront", "Medical Nonstorefront"),
                            ("Medical Retail", "Medical Retail"),
                            ("Microbusiness", "Microbusiness"),
                            ("Testing Lab", "Testing Lab"),
                        ],
                        max_length=1000,
                    ),
                ),
                ("Company", models.CharField(default=None, max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name="Brand",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(default=None, max_length=50, unique=True)),
                ("Brand_description", ckeditor.fields.RichTextField(default=None)),
                (
                    "Brand_Logo",
                    models.ImageField(default=None, null=True, upload_to="media/Brand"),
                ),
                (
                    "Status",
                    models.CharField(
                        choices=[("Active", "Active"), ("Hide", "Hide")],
                        default=1,
                        max_length=20,
                    ),
                ),
                ("Link", models.URLField(blank=True, default=None)),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "Meta_title",
                    models.CharField(
                        blank=True, default=None, max_length=60, null=True
                    ),
                ),
                (
                    "Meta_Description",
                    models.CharField(
                        blank=True, default=None, max_length=160, null=True
                    ),
                ),
                (
                    "Url_slug",
                    models.CharField(
                        blank=True, default=None, max_length=2048, null=True
                    ),
                ),
                ("rating", models.IntegerField(default=None, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=500, unique=True)),
                (
                    "categoryImages",
                    models.ImageField(null=True, upload_to="media/Category"),
                ),
                (
                    "Status",
                    models.CharField(
                        choices=[("Active", "Active"), ("Hide", "Hide")],
                        default=1,
                        max_length=20,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "Meta_title",
                    models.CharField(default=None, max_length=60, null=True),
                ),
                (
                    "Meta_Description",
                    models.CharField(default=None, max_length=160, null=True),
                ),
                (
                    "Url_slug",
                    models.CharField(
                        blank=True, default=None, max_length=2048, null=True
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Cities",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("CityName", models.CharField(max_length=100, unique=True)),
                ("CityFlag", models.ImageField(null=True, upload_to="media/City ")),
                (
                    "Status",
                    models.CharField(
                        choices=[("Active", "Active"), ("Hide", "Hide")],
                        default=1,
                        max_length=20,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="Countries",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("CountryName", models.CharField(max_length=100, unique=True)),
                (
                    "CountryFlag",
                    models.ImageField(null=True, upload_to="media/Country"),
                ),
                (
                    "Status",
                    models.CharField(
                        choices=[("Active", "Active"), ("Hide", "Hide")],
                        default=1,
                        max_length=20,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="CustomRole",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("RoleTitle", models.CharField(default=None, max_length=100)),
                ("Description", models.CharField(default=None, max_length=1000)),
                ("AddStore", models.BooleanField(default=False)),
                ("ViewStore", models.BooleanField(default=False)),
                ("EditStore", models.BooleanField(default=False)),
                ("DeleteStore", models.BooleanField(default=False)),
                ("AddVendor", models.BooleanField(default=False)),
                ("ViewVendor", models.BooleanField(default=False)),
                ("DeleteVendor", models.BooleanField(default=False)),
                ("EditVendor", models.BooleanField(default=False)),
                ("AddBrand", models.BooleanField(default=False)),
                ("ViewBrand", models.BooleanField(default=False)),
                ("EditBrand", models.BooleanField(default=False)),
                ("DeleteBrand", models.BooleanField(default=False)),
                ("AddUsers", models.BooleanField(default=False)),
                ("ViewUsers", models.BooleanField(default=False)),
                ("EditUsers", models.BooleanField(default=False)),
                ("DeleteUsers", models.BooleanField(default=False)),
                ("AddCustomers", models.BooleanField(default=False)),
                ("ViewCustomers", models.BooleanField(default=False)),
                ("EditCustomers", models.BooleanField(default=False)),
                ("DeleteCustomers", models.BooleanField(default=False)),
                ("AddBanners", models.BooleanField(default=False)),
                ("ViewBanners", models.BooleanField(default=False)),
                ("EditBanners", models.BooleanField(default=False)),
                ("DeleteBanners", models.BooleanField(default=False)),
                ("AddCategory", models.BooleanField(default=False)),
                ("ViewCategory", models.BooleanField(default=False)),
                ("EditCategory", models.BooleanField(default=False)),
                ("DeleteCategory", models.BooleanField(default=False)),
                ("AddSubcategory", models.BooleanField(default=False)),
                ("ViewSubcategory", models.BooleanField(default=False)),
                ("EditSubcategory", models.BooleanField(default=False)),
                ("DeleteSubcategory", models.BooleanField(default=False)),
                ("AddBlogs", models.BooleanField(default=False)),
                ("ViewBlogs", models.BooleanField(default=False)),
                ("EditBlogs", models.BooleanField(default=False)),
                ("DeleteBlogs", models.BooleanField(default=False)),
                ("AddComments", models.BooleanField(default=False)),
                ("ViewComments", models.BooleanField(default=False)),
                ("EditComments", models.BooleanField(default=False)),
                ("DeleteComments", models.BooleanField(default=False)),
                ("AddReports", models.BooleanField(default=False)),
                ("ViewReports", models.BooleanField(default=False)),
                ("EditReports", models.BooleanField(default=False)),
                ("DeleteReports", models.BooleanField(default=False)),
                ("AddInqueries", models.BooleanField(default=False)),
                ("ViewInqueries", models.BooleanField(default=False)),
                ("EditInqueries", models.BooleanField(default=False)),
                ("DeleteInqueries", models.BooleanField(default=False)),
                ("AddMessages", models.BooleanField(default=False)),
                ("ViewMessages", models.BooleanField(default=False)),
                ("EditMessages", models.BooleanField(default=False)),
                ("DeleteMessages", models.BooleanField(default=False)),
                ("AddSalesAndAnalytics", models.BooleanField(default=False)),
                ("ViewSalesAndAnalytics", models.BooleanField(default=False)),
                ("EditSalesAndAnalytics", models.BooleanField(default=False)),
                ("DeleteSalesAndAnalytics", models.BooleanField(default=False)),
                ("AddStaff", models.BooleanField(default=False)),
                ("ViewStaff", models.BooleanField(default=False)),
                ("EditStaff", models.BooleanField(default=False)),
                ("DeleteStaff", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="ExportFile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("File", models.FileField(upload_to="excel")),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="HomePageBanner",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("Banner", models.ImageField(upload_to="media/Banner")),
                ("mobile", models.ImageField(upload_to="media/MobileBanner")),
                (
                    "status",
                    models.CharField(
                        choices=[("Active", "Active"), ("Hide", "Hide")],
                        default="Active",
                        max_length=999,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Net_Weight",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("Weight", models.CharField(default=None, max_length=50)),
                ("Weight_Price", models.IntegerField(default=0)),
                (
                    "Status",
                    models.CharField(
                        choices=[("Active", "Active"), ("Hide", "Hide")],
                        default=1,
                        max_length=20,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="NewsCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=500, unique=True)),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "Meta_title",
                    models.CharField(default=None, max_length=60, null=True),
                ),
                (
                    "Meta_Description",
                    models.CharField(default=None, max_length=160, null=True),
                ),
                (
                    "Url_slug",
                    models.CharField(
                        blank=True, default=None, max_length=2048, null=True
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PrivacyandPolicies",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("Content", ckeditor.fields.RichTextField()),
            ],
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "Specialid",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                ("created", models.DateField(auto_now_add=True)),
                ("updated", models.DateField(auto_now=True)),
                ("Product_Name", models.CharField(max_length=100)),
                (
                    "Product_Description",
                    ckeditor.fields.RichTextField(blank=True, default=None, null=True),
                ),
                (
                    "SKU",
                    models.CharField(
                        blank=True, default=None, max_length=100, null=True
                    ),
                ),
                (
                    "strain",
                    models.CharField(
                        choices=[
                            ("None", "None"),
                            ("Indica", "Indica"),
                            ("Sativa", "Sativa"),
                            ("Hybrid", "Hybrid"),
                            ("CBD", "CBD"),
                        ],
                        default=None,
                        max_length=50,
                    ),
                ),
                (
                    "UPC",
                    models.CharField(
                        blank=True, default=None, max_length=100, null=True
                    ),
                ),
                ("THC", models.IntegerField(blank=True, default=0)),
                ("CBD", models.IntegerField(blank=True, default=0)),
                ("CBN", models.IntegerField(blank=True, default=0)),
                (
                    "lab_Result",
                    models.CharField(
                        choices=[("percentage", "%"), ("Magnesium", "Mg")],
                        max_length=50,
                    ),
                ),
                (
                    "tag",
                    models.CharField(
                        blank=True, default=None, max_length=50, null=True
                    ),
                ),
                (
                    "Meta_title",
                    models.CharField(default=None, max_length=60, null=True),
                ),
                (
                    "Meta_Description",
                    models.CharField(default=None, max_length=160, null=True),
                ),
                (
                    "Url_slug",
                    models.CharField(
                        blank=True, default=None, max_length=2048, null=True
                    ),
                ),
                ("Alt_Text", models.CharField(default=None, max_length=50, null=True)),
                ("Link", models.URLField(blank=True, default=None, null=True)),
                (
                    "Status",
                    models.CharField(
                        choices=[("Active", "Active"), ("Hide", "Hide")],
                        default="Active",
                        max_length=20,
                    ),
                ),
                ("rating", models.IntegerField(default=None, null=True)),
                ("WishList", models.BooleanField(default=False)),
                ("ProductCoupoun", models.JSONField(default=list, null=True)),
                ("CategoryCoupoun", models.JSONField(default=list, null=True)),
                (
                    "Brand_id",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="AdminPanel.brand",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PromotionalBanners",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("Country", models.CharField(max_length=100, null=True)),
                ("State", models.CharField(max_length=100, null=True)),
                (
                    "Banner",
                    models.ImageField(null=True, upload_to="media/PromotionalBanner"),
                ),
                ("Title", models.CharField(default="", max_length=999, null=True)),
                ("Link", models.URLField(null=True)),
                (
                    "mobile",
                    models.ImageField(upload_to="media/MobilePromotionalBanner"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[("Active", "Active"), ("Hide", "Hide")],
                        default="Active",
                        max_length=999,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="StaticImages",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("Logo", models.ImageField(upload_to="media/Logo")),
                ("AboutUs1", models.ImageField(upload_to="media/AboutUs1")),
                ("AboutUs2", models.ImageField(upload_to="media/AboutUs2")),
                ("AboutUs3", models.ImageField(upload_to="media/AboutUs3")),
                ("AboutUs4", models.ImageField(upload_to="media/AboutUs4")),
                ("ShareImage", models.ImageField(upload_to="media/ShareImage")),
                (
                    "Fourhundredfour",
                    models.ImageField(upload_to="media/Fourhundredfour"),
                ),
                (
                    "Fourhundredthree",
                    models.ImageField(upload_to="media/Fourhundredthree"),
                ),
                (
                    "Fivehundredthree",
                    models.ImageField(upload_to="media/Fivehundredthree"),
                ),
                ("blogbanner", models.ImageField(upload_to="media/blogbanner")),
                ("Indica", models.ImageField(upload_to="media/Strain")),
                ("Hybrid", models.ImageField(upload_to="media/Strain")),
                ("Sativa", models.ImageField(upload_to="media/Strain")),
                ("CBD", models.ImageField(upload_to="media/Strain")),
            ],
        ),
        migrations.CreateModel(
            name="Subscribe",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("email", models.EmailField(max_length=254, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="TermsandCondition",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("Content", ckeditor.fields.RichTextField()),
            ],
        ),
        migrations.CreateModel(
            name="USACountry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("zip", models.CharField(max_length=100, null=True)),
                ("lat", models.CharField(max_length=100, null=True)),
                ("lng", models.CharField(max_length=100, null=True)),
                ("city", models.CharField(max_length=100, null=True)),
                ("state_id", models.CharField(max_length=100, null=True)),
                ("state_name", models.CharField(max_length=100, null=True)),
                ("zcta", models.CharField(max_length=100, null=True)),
                ("parent_zcta", models.CharField(max_length=100, null=True)),
                ("population", models.CharField(max_length=100, null=True)),
                ("density", models.CharField(max_length=100, null=True)),
                ("county_fips", models.CharField(max_length=100, null=True)),
                ("county_name", models.CharField(max_length=100, null=True)),
                ("county_weights", models.CharField(max_length=100, null=True)),
                ("county_names_all", models.CharField(max_length=100, null=True)),
                ("county_fips_all", models.CharField(max_length=100, null=True)),
                ("imprecise", models.CharField(max_length=100, null=True)),
                ("military", models.CharField(max_length=100, null=True)),
                ("timezone", models.CharField(max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "user_type",
                    models.CharField(
                        choices=[
                            ("Admin", "Admin"),
                            ("Vendor", "Vendor"),
                            ("Customer", "Customer"),
                            ("Co-Owner", "Co-Owner"),
                            ("Content Manager Editor", "Content Manager Editor"),
                            ("vendor managent", "vendor managent"),
                            ("store managment", "store managment"),
                        ],
                        default="Admin",
                        max_length=30,
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        default="media/BlankImage.jpg",
                        null=True,
                        upload_to="media/UserProfile",
                    ),
                ),
                ("googlelink", models.URLField(null=True)),
                ("Name", models.CharField(max_length=999, null=True)),
                (
                    "username",
                    models.CharField(
                        blank=True, max_length=100, null=True, unique=True
                    ),
                ),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("MobilePhone", models.CharField(max_length=20, null=True)),
                ("password", models.CharField(max_length=50)),
                ("DeliveryAddress", models.CharField(max_length=5000, null=True)),
                ("MedicalCardNumber", models.CharField(max_length=50, null=True)),
                ("MedicalCardExpire", models.DateField(null=True)),
                ("MedicalCardState", models.CharField(max_length=100, null=True)),
                ("EmailBoolean", models.BooleanField(default=False)),
                ("NewsLetter", models.BooleanField(default=False)),
                ("ReviewSuggestions", models.BooleanField(default=False)),
                ("PushNotification", models.BooleanField(default=False)),
                ("Recommendations", models.BooleanField(default=False)),
                ("Savings", models.BooleanField(default=False)),
                ("OrderupdatePushNotification", models.BooleanField(default=False)),
                ("OrderupdateSMSNotifications", models.BooleanField(default=False)),
                (
                    "DateOfBirth",
                    models.CharField(
                        blank=True, default=None, max_length=100, null=True
                    ),
                ),
                ("otp", models.IntegerField(default=None, null=True)),
                (
                    "PhotoId",
                    models.ImageField(
                        blank=True, default=None, null=True, upload_to="media/PhotoId"
                    ),
                ),
                (
                    "Gender",
                    models.CharField(
                        blank=True,
                        choices=[("M", "MALE"), ("F", "FEMALE")],
                        default=None,
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[("Active", "Active"), ("Hide", "Hide")],
                        default="Active",
                        max_length=50,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("is_staff", models.BooleanField(default=False)),
                ("is_superuser", models.BooleanField(default=False)),
                ("Roles", models.ManyToManyField(to="AdminPanel.customrole")),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SubCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=500, unique=True)),
                (
                    "Status",
                    models.CharField(
                        choices=[("Active", "Active"), ("Hide", "Hide")],
                        default=1,
                        max_length=20,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "Meta_title",
                    models.CharField(default=None, max_length=60, null=True),
                ),
                (
                    "Meta_Description",
                    models.CharField(default=None, max_length=160, null=True),
                ),
                (
                    "Url_slug",
                    models.CharField(
                        blank=True, default=None, max_length=2048, null=True
                    ),
                ),
                (
                    "SubCategoryImage",
                    models.ImageField(null=True, upload_to="media/SubCategory"),
                ),
                (
                    "category_id",
                    models.ForeignKey(
                        default=1,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="subcategories",
                        to="AdminPanel.category",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Stores",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("Country", models.CharField(max_length=500, null=True)),
                ("State", models.CharField(max_length=500, null=True)),
                ("City", models.CharField(max_length=500, null=True)),
                ("MinimumOrderPrice", models.JSONField(null=True)),
                ("Locations", models.JSONField(null=True)),
                ("Hours", models.JSONField(null=True)),
                ("SetbyMin", models.JSONField(null=True)),
                ("searchboxlocation", models.JSONField(null=True)),
                ("SetbyDays", models.JSONField(null=True)),
                ("FaceBook", models.URLField(null=True)),
                ("Instagram", models.URLField(null=True)),
                ("Twitter", models.URLField(null=True)),
                ("VideoLink", models.URLField(null=True)),
                (
                    "DeliveryInformation",
                    models.CharField(blank=True, max_length=9999999, null=True),
                ),
                ("Store_Name", models.CharField(max_length=100, null=True)),
                ("Legal_Store_Name", models.CharField(max_length=1000, null=True)),
                ("Store_Address", models.CharField(max_length=1000, null=True)),
                (
                    "Store_Type",
                    models.CharField(
                        choices=[
                            ("dispensary", "Dispensary"),
                            ("delivery", "Delivery"),
                            ("Curbside Pickup", "Curbside Pickup"),
                        ],
                        default=None,
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "Stores_Description",
                    ckeditor.fields.RichTextField(blank=True, default=None, null=True),
                ),
                (
                    "Store_Image",
                    models.ImageField(
                        blank=True, default=None, null=True, upload_to="media/Brand"
                    ),
                ),
                (
                    "Stores_Website",
                    models.URLField(blank=True, default=None, null=True),
                ),
                ("Stores_MobileNo", models.CharField(max_length=15, unique=True)),
                (
                    "LicenceNo",
                    models.CharField(
                        blank=True, default=None, max_length=50, null=True, unique=True
                    ),
                ),
                (
                    "License_Type",
                    models.CharField(
                        choices=[
                            ("None", "None"),
                            ("Adult-Use Cultivation", "Adult-Use Cultivation"),
                            ("Adult-Use Mfg.", "Adult-Use Mfg."),
                            ("Adult-Use Nonstorefront", "Adult-Use Nonstorefront"),
                            ("Adult-Use Retail", "Adult-Use Retail"),
                            ("Distributor", "Distributor"),
                            ("Event", "Event"),
                            ("Medical Cultivation", "Medical Cultivation"),
                            ("Medical Mfg.", "Medical Mfg."),
                            ("Medical Nonstorefront", "Medical Nonstorefront"),
                            ("Medical Retail", "Medical Retail"),
                            ("Microbusiness", "Microbusiness"),
                            ("Testing Lab", "Testing Lab"),
                        ],
                        default="None",
                        max_length=23,
                        null=True,
                    ),
                ),
                (
                    "Expiration",
                    models.CharField(
                        blank=True, default=None, max_length=100, null=True
                    ),
                ),
                (
                    "Licence_Doc",
                    models.FileField(
                        blank=True, null=True, upload_to="media/LicenceDocument"
                    ),
                ),
                (
                    "Status",
                    models.CharField(
                        choices=[("Active", "Active"), ("Hide", "Hide")],
                        default="Hide",
                        max_length=20,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "Meta_title",
                    models.CharField(default=None, max_length=60, null=True),
                ),
                (
                    "Meta_Description",
                    models.CharField(default=None, max_length=160, null=True),
                ),
                (
                    "Url_slug",
                    models.CharField(
                        blank=True, default=None, max_length=2048, null=True
                    ),
                ),
                ("rating", models.FloatField(default=None, null=True)),
                (
                    "Order_Type",
                    models.CharField(
                        choices=[
                            ("Delivery", "Delivery"),
                            ("Pickup", "Pickup"),
                            ("Delivery and Pickup", "Delivery and Pickup"),
                        ],
                        default="Delivery",
                        max_length=50,
                    ),
                ),
                ("Dogs_allowed", models.BooleanField(default=False, null=True)),
                (
                    "Has_gender_neutral_toilets",
                    models.BooleanField(default=False, null=True),
                ),
                (
                    "High_chairs_available",
                    models.BooleanField(default=False, null=True),
                ),
                ("Has_toilets", models.BooleanField(default=False, null=True)),
                (
                    "Minimum_21_years_or_older",
                    models.BooleanField(default=False, null=True),
                ),
                ("Recreational", models.BooleanField(default=False, null=True)),
                ("Medical", models.BooleanField(default=False, null=True)),
                ("Cash_on_Delivery", models.BooleanField(default=False, null=True)),
                ("Security_Staff", models.BooleanField(default=False, null=True)),
                ("CarParking", models.BooleanField(default=False, null=True)),
                ("Wi_Fi", models.BooleanField(default=False, null=True)),
                ("lat", models.FloatField(null=True)),
                ("lng", models.FloatField(null=True)),
                ("StoreFront", models.BooleanField(default=False, null=True)),
                ("Delivery", models.BooleanField(default=False, null=True)),
                ("CurbSide_Pickup", models.BooleanField(default=False, null=True)),
                ("Has_bar_on_site", models.BooleanField(default=False, null=True)),
                ("CurbSidePickupHours", models.JSONField(null=True)),
                ("CurbSideCity", models.CharField(max_length=999999, null=True)),
                ("CurbSideState", models.CharField(max_length=999999, null=True)),
                ("CurbSideZipCode", models.CharField(max_length=999999, null=True)),
                ("CurbsideLatAndLong", models.JSONField(null=True)),
                ("TotalRating", models.IntegerField(default=0)),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="States",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("StateName", models.CharField(max_length=100, unique=True)),
                (
                    "StateFlagFlag",
                    models.ImageField(null=True, upload_to="media/State"),
                ),
                (
                    "Status",
                    models.CharField(
                        choices=[("Active", "Active"), ("Hide", "Hide")],
                        default=1,
                        max_length=20,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "Country_id",
                    models.ForeignKey(
                        default=1,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="AdminPanel.countries",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Salestaxes",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tax_value", models.IntegerField(default=0)),
                ("tax_type", models.CharField(max_length=20, unique=True)),
                (
                    "Status",
                    models.CharField(
                        choices=[("Active", "Active"), ("Hide", "Hide")],
                        default=1,
                        max_length=20,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "State",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="AdminPanel.states",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ProductWeight",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("Price", models.JSONField()),
                (
                    "product",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="Prices",
                        to="AdminPanel.product",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ProductImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("image", models.ImageField(upload_to="media/product_images")),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="images",
                        to="AdminPanel.product",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="product",
            name="Store_id",
            field=models.ForeignKey(
                default=None,
                on_delete=django.db.models.deletion.CASCADE,
                to="AdminPanel.stores",
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="Sub_Category_id",
            field=models.ForeignKey(
                default=None,
                on_delete=django.db.models.deletion.CASCADE,
                to="AdminPanel.subcategory",
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="created_by",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.CreateModel(
            name="NewsSubCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=500, unique=True)),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "Meta_title",
                    models.CharField(default=None, max_length=60, null=True),
                ),
                (
                    "Meta_Description",
                    models.CharField(default=None, max_length=160, null=True),
                ),
                (
                    "Url_slug",
                    models.CharField(
                        blank=True, default=None, max_length=2048, null=True
                    ),
                ),
                (
                    "category_id",
                    models.ForeignKey(
                        default=1,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="AdminPanel.newscategory",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="newscategory",
            name="created_by",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.CreateModel(
            name="News",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("Title", models.CharField(default=None, max_length=100)),
                ("Description", ckeditor.fields.RichTextField(null=True)),
                (
                    "Image",
                    models.ImageField(
                        blank=True, default=None, null=True, upload_to="media/Products"
                    ),
                ),
                ("Alt_Text", models.CharField(default=None, max_length=50)),
                (
                    "Meta_title",
                    models.CharField(default=None, max_length=60, null=True),
                ),
                (
                    "Meta_Description",
                    models.CharField(default=None, max_length=160, null=True),
                ),
                (
                    "Url_slug",
                    models.CharField(
                        blank=True, default=None, max_length=2048, null=True
                    ),
                ),
                ("Publish_Date", models.DateTimeField(auto_now_add=True)),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                ("ViewCount", models.IntegerField(default=0)),
                (
                    "Category_id",
                    models.ForeignKey(
                        default=1,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="AdminPanel.newscategory",
                    ),
                ),
                (
                    "SubCategory_id",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="AdminPanel.newssubcategory",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Law",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("content", ckeditor.fields.RichTextField()),
                (
                    "City",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="AdminPanel.cities",
                    ),
                ),
                (
                    "Country",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="AdminPanel.countries",
                    ),
                ),
                (
                    "State",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="AdminPanel.states",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Estemeedtaxes",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tax_value", models.IntegerField(default=0)),
                ("tax_type", models.CharField(max_length=20, unique=True)),
                (
                    "Status",
                    models.CharField(
                        choices=[("Active", "Active"), ("Hide", "Hide")],
                        default=1,
                        max_length=20,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "State",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="AdminPanel.states",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Coupoun",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "DiscountCode",
                    models.CharField(
                        default=None, max_length=100, null=True, unique=True
                    ),
                ),
                (
                    "AutomaticDiscount",
                    models.CharField(
                        default=None, max_length=100, null=True, unique=True
                    ),
                ),
                ("PercentageAmount", models.IntegerField(null=True)),
                ("ValueAmount", models.IntegerField(null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[("Active", "Active"), ("Hide", "Hide")], max_length=500
                    ),
                ),
                ("product", models.JSONField()),
                ("NoMinimumRequirements", models.BooleanField(null=True)),
                ("MinimumPurchaseAmount", models.IntegerField(null=True)),
                ("MinimumQuantityofItem", models.IntegerField(null=True)),
                ("AllCustomer", models.BooleanField(null=True)),
                ("SpecificCustomer", models.JSONField(null=True)),
                ("Specific_customer_segments", models.JSONField(null=True)),
                ("LimitNumberOfTime", models.IntegerField(null=True)),
                ("LimitToOneUsePerCustomer", models.BooleanField(null=True)),
                ("CombinationProduct", models.BooleanField(null=True)),
                ("CombinationDiscount", models.BooleanField(null=True)),
                ("CustomerBuys", models.IntegerField(null=True)),
                ("CustomerGets", models.JSONField(null=True)),
                ("MaximumUsesPerOrder", models.IntegerField(null=True)),
                (
                    "DiscountType",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Amount off Products", "Amount off Products"),
                            ("Amount off Order", "Amount off Order"),
                            ("Buy X get Y", "Buy X get Y"),
                            ("Free Shipping", "Free Shipping"),
                        ],
                        max_length=10000,
                        null=True,
                    ),
                ),
                ("free", models.BooleanField(null=True)),
                ("ProLocationOnly", models.BooleanField(null=True)),
                ("CustomerSpends", models.JSONField(null=True)),
                ("AllLocation", models.BooleanField(null=True)),
                ("SelectedLocation", models.JSONField(null=True)),
                ("ShippingRate", models.IntegerField(null=True)),
                ("StartDate", models.DateField(null=True)),
                ("StartTime", models.TimeField(null=True)),
                ("EndDate", models.DateField(null=True)),
                ("EndTime", models.TimeField(null=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="cities",
            name="States_id",
            field=models.ForeignKey(
                default=1,
                on_delete=django.db.models.deletion.CASCADE,
                to="AdminPanel.states",
            ),
        ),
        migrations.AddField(
            model_name="brand",
            name="created_by",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
            ),
        ),
    ]
